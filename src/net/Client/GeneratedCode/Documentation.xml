<?xml version="1.0" encoding="utf-8" ?>
<Documentation>
  <Member name="IAsset.Id">
    <summary>Unique identifier set by Media Services.</summary>
    <value></value>
  </Member>
  <Member name="IAsset.State">
    <summary>An enumeration value that describes the state of the asset. Value values are: Initialized(0), Published(1), and Deleted(2).</summary>
    <value></value>
  </Member>
  <Member name="IAsset.Created">
    <summary>This value is set by Media Services at creation time.</summary>
    <value></value>
  </Member>
  <Member name="IAsset.LastModified">
    <summary>This value is updated by Media Services after any property changes are made.</summary>
    <value></value>
  </Member>
  <Member name="IAsset.Name">
    <summary>Optional. Friendly name for your Asset.</summary>
    <value></value>
  </Member>
  <Member name="IAsset.AlternateId">
    <summary>Optional. An alternate Id value that corresponds to an Id in another content management system.</summary>
    <value></value>
  </Member>
  <Member name="IAsset.Uri">
    <summary>Asset azure storage container URI.</summary>
    <value></value>
  </Member>
  <Member name="IAssetFile.Id">
    <summary>Unique identifier set by Media Services.</summary>
    <value></value>
  </Member>
  <Member name="IAssetFile.MimeType">
    <summary>Optional. Media Services does not inspect any blob that you uploaded, so you must manually set the mime type. For example, "text/plain" or "video/x-ms-wmv" are valid values to use.</summary>
    <value></value>
  </Member>
  <Member name="IAssetFile.Created">
    <summary>This value is set by Media Services at creation time. It represents the number of milliseconds since midnight Jan 1, 1970.</summary>
    <value></value>
  </Member>
  <Member name="IAssetFile.LastModified">
    <summary>This value is updated by Media Services after any property changes are made. It represents the number of milliseconds since midnight Jan 1, 1970.</summary>
    <value></value>
  </Member>
  <Member name="IAssetFile.IsPrimary">
    <summary>Optional. Determines if this file is the primary file in a multi-file Asset.</summary>
    <value></value>
  </Member>
  <Member name="IAssetFile.ContentFileSize">
    <summary>AssetFile size (in bytes) of the content.</summary>
    <value></value>
  </Member>
  <Member name="IAssetFile.ContentChecksum">
    <summary>Optional. A hexadecimal number representing a MD5 (RFC 1321) message digest value. This value is set by the client or client library to serve as a validation of the successful upload of the content.</summary>
    <value></value>
  </Member>
  <Member name="IAssetFile.Name">
    <summary>Optional. Friendly name for your AssetFile. The default value is the filename you used during your file upload.</summary>
    <value></value>
  </Member>
  <Member name="IAssetFile.ParentAssetId">
    <summary>Asset Id of the Asset that this file is associated with.</summary>
    <value></value>
  </Member>
  <Member name="IAssetFile.EncryptionVersion">
    <summary>Optional. Current supported version for both StorageEncryption and CommonEncryption is "1.0".</summary>
    <value></value>
  </Member>
  <Member name="IAssetFile.EncryptionScheme">
    <summary>Optional. The encryption scheme used for this file. The valid values are: "StorageEncryption" or "CommonEncryption".</summary>
    <value></value>
  </Member>
  <Member name="IAssetFile.IsEncrypted">
    <summary>Optional. This value should be set to true if this file is stored encrypted.</summary>
    <value></value>
  </Member>
  <Member name="IAssetFile.EncryptionKeyId">
    <summary>Optional. Encrypted ContentKey Id.</summary>
    <value></value>
  </Member>
  <Member name="IAssetFile.InitializationVector">
    <summary>Optional. The initialization vector used for storage encryption.</summary>
    <value></value>
  </Member>
  <Member name="IContentKey.Id">
    <summary>Required. User defined unique identifier. This value is not set by Media Services.</summary>
    <value></value>
  </Member>
  <Member name="IContentKey.Created">
    <summary>DateTime of content key creation. This value is set by Media Services at creation time.</summary>
    <value></value>
  </Member>
  <Member name="IContentKey.LastModified">
    <summary>This value is updated by Media Services after any property changes are made. This value is set by Media Services.</summary>
    <value></value>
  </Member>
  <Member name="IContentKey.Name">
    <summary>Optional. Friendly name for your ContentKey.</summary>
    <value></value>
  </Member>
  <Member name="IContentKey.EncryptedContentKey">
    <summary>Required. Content key encrypted with the public key of the X.509 certificate.</summary>
    <value></value>
  </Member>
  <Member name="IContentKey.ContentKeyType">
    <summary>Required. An enumeration value that specifies the content key type. Valid values are: 

      CommonEncryption = 0 
  
      StorageEncryption = 1 

      ConfigurationEncryption = 2

    </summary>
    <value></value>
  </Member>
  <Member name="IContentKey.ProtectionKeyId">
    <summary>Thumbprint of the X.509 certificate that is used to encrypt the storage, common encryption, or configuration encryption keys. This value is returned to you when calling the GetProtectionKeyId function.</summary>
    <value></value>
  </Member>
  <Member name="IContentKey.ProtectionKeyType">
    <summary>An enumeration value that specifies the protection key type. Valid values are: 

      X509CertificateThumbprint = 0.

    </summary>
    <value></value>
  </Member>
  <Member name="IContentKey.Checksum">
    <summary>The checksum of the ContentKey.</summary>
    <value></value>
  </Member>
  <Member name="IAccessPolicy.Id">
    <summary>Unique identifier set by Media Services.</summary>
    <value></value>
  </Member>
  <Member name="IAccessPolicy.Created">
    <summary>This value is set by Media Services at creation time. It represents the number of milliseconds since midnight Jan 1, 1970.</summary>
    <value></value>
  </Member>
  <Member name="IAccessPolicy.LastModified">
    <summary>This value is updated by Media Services after any property changes are made. It represents the number of milliseconds since midnight Jan 1, 1970.</summary>
    <value></value>
  </Member>
  <Member name="IAccessPolicy.Name">
    <summary>Required. Friendly name for your AccessPolicy.</summary>
    <value></value>
  </Member>
  <Member name="IAccessPolicy.Permissions">
    <summary>Optional. This value specifies the access rights the client has when interacting with the Asset. Valid values are: 

      None = 0

      Read = 1

      Write = 2

      Delete = 4

      List = 8

      The default value is 0.

    </summary>
    <value></value>
  </Member>
  <Member name="IJobTemplate.Id">
    <summary>Unique identifier set by Media Services.</summary>
    <value></value>
  </Member>
  <Member name="IJobTemplate.TemplateType">
    <summary>The type of JobTemplate that can be created. Valid values are:

      SystemLevel = 0

      AccountLevel = 1

      Note: SystemLevel JobTemplate types are reserved for Media Services. You must set this value to AccountLevel(1).

    </summary>
    <value></value>
  </Member>
  <Member name="IJobTemplate.Created">
    <summary>This value is set by Media Services at creation time. It represents the number of milliseconds since midnight Jan 1, 1970.</summary>
    <value></value>
  </Member>
  <Member name="IJobTemplate.LastModified">
    <summary>This value is updated by Media Services after any property changes are made. It represents the number of milliseconds since midnight Jan 1, 1970.</summary>
    <value></value>
  </Member>
  <Member name="IJobTemplate.JobTemplateBody">
    <summary>This section defines what TaskTemplates and the number of input and output assets to use.</summary>
    <value></value>
  </Member>
  <Member name="IJobTemplate.NumberofInputAssets">
    <summary>The number of input assets that can be used with this JobTemplate.</summary>
    <value></value>
  </Member>
  <Member name="ITaskTemplate.Id">
    <summary>Unique identifier set by Media Services.</summary>
    <value></value>
  </Member>
  <Member name="ITaskTemplate.Name">
    <summary>Optional. Friendly name for the task template.</summary>
    <value></value>
  </Member>
  <Member name="ITaskTemplate.Description">
    <summary>Optional. The description of the TaskTemplate.</summary>
    <value></value>
  </Member>
  <Member name="ITaskTemplate.NumberofInputAssets">
    <summary>Required. Number of input Assets the TaskTemplate must process.</summary>
    <value></value>
  </Member>
  <Member name="ITaskTemplate.NumberofOutputAssets">
    <summary>Required. Number of output Assets the TaskTemplate must create if they are not already specified, or use if they are specified.</summary>
    <value></value>
  </Member>
  <Member name="ITaskTemplate.Configuration">
    <summary>Required. Preset that defines processing actions, such as encoding, protection, and so on, that the TaskTemplate will perform.</summary>
    <value></value>
  </Member>
  <Member name="ITaskTemplate.MediaProcessorId">
    <summary>Required. Id of the MediaProcessor that will be used in the TaskTemplate. Valid values can be retrieved by performing a HTTP GET request on /API/MediaProcessors.</summary>
    <value></value>
  </Member>
  <Member name="ITaskTemplate.Created">
    <summary>DateTime of task template creation. This value is set by Media Services at creation time.</summary>
    <value></value>
  </Member>
  <Member name="ITaskTemplate.LastModified">
    <summary>This value is updated by Media Services after any property changes are made.</summary>
    <value></value>
  </Member>
  <Member name="ITaskTemplate.Options">
    <summary>Optional. An enumeration value that describes the encryption options that a TaskTemplate can be created with. Valid values are: 

      None = 0 

      ProtectedConfiguration = 1

    </summary>
    <value></value>
  </Member>
  <Member name="ITaskTemplate.InitializationVector">
    <summary>Optional. The InitializationVector of the configuration file.</summary>
    <value></value>
  </Member>
  <Member name="ITaskTemplate.EncryptionVersion">
    <summary>Optional. The version of configuration encryption to use. The currently supported version is "1.0".</summary>
    <value></value>
  </Member>
  <Member name="ITaskTemplate.EncryptionScheme">
    <summary>Optional. The EncryptionScheme used with the configuration file. The valid value is "ConfigurationEncryption".</summary>
    <value></value>
  </Member>
  <Member name="ITaskTemplate.EncryptionKeyId">
    <summary>Optional. The encrypted Key Id.</summary>
    <value></value>
  </Member>
  <Member name="IJob.Id">
    <summary>Unique identifier set by Media Services.</summary>
    <value></value>
  </Member>
  <Member name="IJob.Priority">
    <summary>The Priority of the job. A higher value indicates a higher priority relative to your other scheduled jobs. For example, a job with Priority = 40 will be processed before a job with Priority = 30.</summary>
    <value></value>
  </Member>
  <Member name="IJob.State">
    <summary>The State of the job. This is an aggregate of the Tasks state. If one Task fails, this property would be set to Error(4). Valid values are: 

      Queued = 0 

      Scheduled = 1 

      Processing = 2 

      Finished = 3 

      Error = 4 

      Canceled = 5 

      Canceling = 6 

    </summary>
    <value></value>
  </Member>
  <Member name="IJob.Name">
    <summary>Optional. Friendly name for the job.</summary>
    <value></value>
  </Member>
  <Member name="IJob.Created">
    <summary>This value is set by Media Services at creation time. It represents the number of milliseconds since midnight Jan 1, 1970.</summary>
    <value></value>
  </Member>
  <Member name="IJob.LastModified">
    <summary>This value is updated by Media Services after any property changes are made. It represents the number of milliseconds since midnight Jan 1, 1970.</summary>
    <value></value>
  </Member>
  <Member name="IJob.StartTime">
    <summary>DateTime when job has been started</summary>
    <value></value>
  </Member>
  <Member name="IJob.RunningDuration">
    <summary>The elapsed time (in seconds) for the job.</summary>
    <value></value>
  </Member>
  <Member name="IJob.TemplateId">
    <summary>Optional. Id of the JobTemplate entity.</summary>
    <value></value>
  </Member>
  <Member name="ITask.Id">
    <summary>Unique identifier set by Media Services.</summary>
    <value></value>
  </Member>
  <Member name="ITask.Name">
    <summary>Optional. Friendly name for the Task.</summary>
    <value></value>
  </Member>
  <Member name="ITask.MediaProcessorId">
    <summary>Id of the MediaProcessor that will be used in the Task. Valid values can be retrieved by performing a HTTP GET request on /API/MediaProcessors.</summary>
    <value></value>
  </Member>
  <Member name="ITask.State">
    <summary>The state of the Task. Valid values are:

      None = 0 

      Active = 1 

      Running = 2 

      Completed = 3 

    </summary>
    <value></value>
  </Member>
  <Member name="ITask.PerfMessage">
    <summary>Contains performance information about the Task.</summary>
    <value></value>
  </Member>
  <Member name="ITask.Priority">
    <summary>Priority of a task</summary>
    <value></value>
  </Member>
  <Member name="ITask.StartTime">
    <summary>The datetime when the Task started.</summary>
    <value></value>
  </Member>
  <Member name="ITask.EndTime">
    <summary>The datetime when the task completed, failed, or was canceled.</summary>
    <value></value>
  </Member>
  <Member name="ITask.RunningDuration">
    <summary>The elapsed time (in seconds) for the Task.</summary>
    <value></value>
  </Member>
  <Member name="ITask.TaskBody">
    <summary>XML document that contains information about which input and output assets the Task should run against.</summary>
    <value></value>
  </Member>
  <Member name="ITask.Configuration">
    <summary>Required. Preset that defines processing actions, such as encoding, protection, and so on, that the Task will perform.</summary>
    <value></value>
  </Member>
  <Member name="ITask.Options">
    <summary>Optional. An enumeration value that describes the encryption options that a Task can be created with. Valid values are:

      None = 0

      ProtectedConfiguration = 1

    </summary>
    <value></value>
  </Member>
  <Member name="ITask.InitializationVector">
    <summary>Optional. The InitializationVector of the configuration file.</summary>
    <value></value>
  </Member>
  <Member name="ITask.EncryptionVersion">
    <summary>Optional. The version of configuration encryption to use. The currently supported version is "1.0".</summary>
    <value></value>
  </Member>
  <Member name="ITask.EncryptionScheme">
    <summary>Optional. The EncryptionScheme used with the configuration file. The valid value is "ConfigurationEncryption".</summary>
    <value></value>
  </Member>
  <Member name="ITask.EncryptionKeyId">
    <summary>Optional. The encrypted Key Id.</summary>
    <value></value>
  </Member>
  <Member name="ILocator.Id">
    <summary>Unique identifier set by Media Services.
  </summary>
    <value></value>
  </Member>

  <Member name="ILocator.Name">
    <summary>
      The Name of the Asset
    </summary>
    <value></value>
  </Member>
  <Member name="ILocator.AssetId">
    <summary>The Id of the Asset that contains the content you want to provide access to.</summary>
    <value></value>
  </Member>
  <Member name="ILocator.StartTime">
    <summary>The date and time when your locator will be available for clients to use.

Tip: If you need clients to access your files immediately, you should set your StartTime value to five minutes before the current time. This is because there may be clock skew between the client and the server. Also, your StartTime value must following the en-US DateTime format month/day/yearhour:minute:second AM/PM.

    </summary>
    <value></value>
  </Member>
  <Member name="ILocator.ExpirationDateTime">
    <summary>The value (represented in milliseconds since midnight Jan 1, 1970) when the locator can no longer be used to access the specified asset.</summary>
    <value></value>
  </Member>
  <Member name="ILocator.AccessPolicyId">
    <summary>The Id of the AccessPolicy that defines the permissions and duration for the Locator URL.</summary>
    <value></value>
  </Member>
  <Member name="ILocator.Type">
    <summary>Enumeration value that describes the type of Locator. Valid values are:

      None = 0 

      SAS = 1 

      Origin = 2 

      Windows Azure CDN = 3 

    </summary>
    <value></value>
  </Member>
  <Member name="ILocator.Path">
    <summary>URL used for accessing Asset files.</summary>
    <value></value>
  </Member>
  <Member name="ILocator.BaseUri">
    <summary>Base part of the URI (for example, Dns Host name http://someservice.cloudapp.net).</summary>
    <value></value>
  </Member>
  <Member name="ILocator.ContentAccessComponent">
    <summary>Part of the URI needed to access the content. The location of this token in the final media URL depends on the locator type, media type and streaming service.</summary>
    <value></value>
  </Member>
  <Member name="IMediaProcessor.Id">
    <summary>Unique identifier set by Media Services.
  </summary>
    <value></value>
  </Member>
  <Member name="IMediaProcessor.Created">
    <summary>DateTime of media processor creation</summary>
    <value></value>
  </Member>
  <Member name="IMediaProcessor.LastModified">
    <summary>DateTime of media processor last modification</summary>
    <value></value>
  </Member>
  <Member name="IMediaProcessor.Name">
    <summary>The friendly name of the MediaProcessor.</summary>
    <value></value>
  </Member>
  <Member name="IMediaProcessor.Version">
    <summary>The version of the MediaProcessor.</summary>
    <value></value>
  </Member>
  <Member name="IMediaProcessor.Sku">
    <summary>The SKU of the MediaProcessor.</summary>
    <value></value>
  </Member>
  <Member name="IMediaProcessor.Vendor">
    <summary>The vendor name of the MediaProcessor.</summary>
    <value></value>
  </Member>
  <Member name="IMediaProcessor.Description">
    <summary>A description about the MediaProcessor.</summary>
    <value></value>
  </Member>
  <Member name="IManifest.Created">
    <summary>DateTime of manifest creation. This value is set by Media Services at creation time. It represents the number of milliseconds since midnight Jan 1, 1970.</summary>
    <value></value>
  </Member>
  <Member name="IManifest.LastModified">
    <summary>This value is updated by Media Services after any property changes are made. It represents the number of milliseconds since midnight Jan 1, 1970.</summary>
    <value></value>
  </Member>
  <Member name="IManifest.Id">
    <summary>Unique identifier set by Media Services.</summary>
    <value></value>
  </Member>
  <Member name="IManifest.Name">
    <summary>Optional. Friendly name for your Asset.</summary>
    <value></value>
  </Member>
  <Member name="IManifest.State">
    <summary>The current state of the manifest. This value can be one of the following: 

      Inactive = 0: No pending asset creations remain. All have either completed or encountered an error. 

      Activating = 1: The manifest is not yet ready to receive files uploaded to the Blob container. 

      Active = 2: There are IngestManifestAssets pending creations and the Blob container is being monitored. 

    </summary>
    <value></value>
  </Member>
  <Member name="IManifest.BlobStorageUriForUpload">
    <summary>This value is set by Media Services. This value specifies the Uri of the Blob storage container which receives the file uploads needed to complete the IngestManifestAssets.</summary>
    <value></value>
  </Member>
  <Member name="IManifestAsset.Created">
    <summary>DateTime of manifest asset creation. This value is set by Media Services at creation time. It represents the number of milliseconds since midnight Jan 1, 1970.</summary>
    <value></value>
  </Member>
  <Member name="IManifestAsset.LastModified">
    <summary>This value is updated by Media Services after any property changes are made. It represents the number of milliseconds since midnight Jan 1, 1970.</summary>
    <value></value>
  </Member>
  <Member name="IManifestAsset.Id">
    <summary>Unique identifier set by Media Services.</summary>
    <value></value>
  </Member>
  <Member name="IManifestAsset.ParentIngestManifestId">
    <summary>Required. IngestManifest Id of the manifest that contains this manifest asset.</summary>
    <value></value>
  </Member>
  <Member name="IManifestAssetFile.Created">
    <summary>DateTime of manifest asset file creation</summary>
    <value></value>
  </Member>
  <Member name="IManifestAssetFile.LastModified">
    <summary>DateTime of manifest asset file last modification</summary>
    <value></value>
  </Member>
  <Member name="IManifestAssetFile.Id">
    <summary>Unique identifier set by Media Services.
  </summary>
    <value></value>
  </Member>
  <Member name="IManifestAssetFile.ParentIngestManifestId">
    <summary>Required. IngestManifest Id of the manifest that contains this file.</summary>
    <value></value>
  </Member>
  <Member name="IManifestAssetFile.ParentManifestAssetId">
    <summary>Required. IngestManifestAsset Id of the IngestManifestAsset that this file is associated with.</summary>
    <value></value>
  </Member>
  <Member name="IManifestAssetFile.State">
    <summary>The current state of the IngestManifestFile. This value can be one of the following: 

      Pending = 0: The file has not yet been uploaded in order to complete the asset creation. Media Services is waiting on the file upload. 

      Finished = 1: The file upload was detected and the associated asset has been updated. 

      Error = 2: An error occurred processing this file. See the ErrorDetails property for error information. 

    </summary>
    <value></value>
  </Member>
  <Member name="IManifestAssetFile.ErrorDetail">
    <summary>Details of an errors encountered processing this file.</summary>
    <value></value>
  </Member>
  <Member name="IManifestAssetFile.Name">
    <summary>Required. Actual filename that will be uploaded to the blob container referenced by the IngestManifest’s BlobStorageUriForUpload property. Media Services watches for the file upload in that container by name.</summary>
    <value></value>
  </Member>
  <Member name="IManifestAssetFile.IsPrimary">
    <summary>Optional. Determines if this file is the primary file in a multi-file Asset.</summary>
    <value></value>
  </Member>
  <Member name="IManifestAssetFile.MimeType">
    <summary>Optional. Media Services does not inspect any blob that you uploaded, so you must manually set the mime type. For example, "text/plain" or "video/x-ms-wmv" are valid values to use.</summary>
    <value></value>
  </Member>
  <Member name="IManifestAssetFile.EncryptionVersion">
    <summary>Optional. Current supported version for both StorageEncryption and CommonEncryption is "1.0"</summary>
    <value></value>
  </Member>
  <Member name="IManifestAssetFile.EncryptionScheme">
    <summary>Optional. The encryption scheme used for this file. The valid values are: "StorageEncryption" or "CommonEncryption".</summary>
    <value></value>
  </Member>
  <Member name="IManifestAssetFile.IsEncrypted">
    <summary>Optional. This value must be set to true if this file is stored encrypted.</summary>
    <value></value>
  </Member>
  <Member name="IManifestAssetFile.EncryptionKeyId">
    <summary>Optional. Encrypted ContentKey Id.</summary>
    <value></value>
  </Member>
  <Member name="IManifestAssetFile.InitializationVector">
    <summary>Optional. The initialization vector used for storage encryption.</summary>
    <value></value>
  </Member>
</Documentation>